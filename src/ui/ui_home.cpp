// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.3
// LVGL version: 8.3.11
// Project name: Project

#include "ui.h"
#include "../modules/time_module.h"
#include "../modules/wifi_module.h"
#include "../modules/ble_module.h"
#include <time.h>
#include <stdio.h>
#include <math.h>

// Các biến global cho các widget
lv_obj_t *uic_wifidisconnect;
lv_obj_t *uic_wificonnect;
lv_obj_t *uic_bleconnect;
lv_obj_t *uic_CLock;
lv_obj_t *uic_battery;
lv_obj_t *uic_title;
lv_obj_t *uic_homebutton;
lv_obj_t *uic_home;
lv_obj_t *ui_home = NULL;
lv_obj_t *ui_homebutton = NULL;
lv_obj_t *ui_title = NULL;
lv_obj_t *ui_battery = NULL;
lv_obj_t *ui_battery80 = NULL;
lv_obj_t *ui_battery50 = NULL;
lv_obj_t *ui_battery30 = NULL;
lv_obj_t *ui_battery10 = NULL;
lv_obj_t *ui_battery5 = NULL;
lv_obj_t *ui_clock = NULL;       // HH
lv_obj_t *ui_h_colon = NULL;     // :
lv_obj_t *ui_m_colon = NULL;     // MM
lv_obj_t *ui_bleconnect = NULL;
lv_obj_t *ui_bledisconnect = NULL;
lv_obj_t *ui_wificonnect = NULL;
lv_obj_t *ui_wifidisconnect = NULL;
lv_obj_t *ui_motor = NULL;

// Timer cho đồng hồ, cập nhật 3 label
static lv_timer_t* clock3label_timer = NULL;
// Timer cho icon wifi
static lv_timer_t* wifi_icon_timer = NULL;
// Timer cho icon BLE
static lv_timer_t* ble_icon_timer = NULL;
// Timer cho animation pin
static lv_timer_t* battery_icon_timer = NULL;
// Timer cho motor animation mượt 60fps
static lv_timer_t* motor_anim_timer = NULL;

// ---------- Dummy Battery Animation -----------
static int dummy_battery_stage = 0;
static const int DUMMY_STAGE_COUNT = 6;

void ui_update_battery_icon_dummy(void) {
    // Ẩn hết các icon
    if (ui_battery80) lv_obj_add_flag(ui_battery80, LV_OBJ_FLAG_HIDDEN);
    if (ui_battery50) lv_obj_add_flag(ui_battery50, LV_OBJ_FLAG_HIDDEN);
    if (ui_battery30) lv_obj_add_flag(ui_battery30, LV_OBJ_FLAG_HIDDEN);
    if (ui_battery10) lv_obj_add_flag(ui_battery10, LV_OBJ_FLAG_HIDDEN);
    if (ui_battery5)  lv_obj_add_flag(ui_battery5, LV_OBJ_FLAG_HIDDEN);

    // Hiện theo stage
    switch (dummy_battery_stage) {
        case 0: if (ui_battery5)  lv_obj_clear_flag(ui_battery5, LV_OBJ_FLAG_HIDDEN);  break;
        case 1: if (ui_battery10) lv_obj_clear_flag(ui_battery10, LV_OBJ_FLAG_HIDDEN); break;
        case 2: if (ui_battery30) lv_obj_clear_flag(ui_battery30, LV_OBJ_FLAG_HIDDEN); break;
        case 3: if (ui_battery50) lv_obj_clear_flag(ui_battery50, LV_OBJ_FLAG_HIDDEN); break;
        case 4: if (ui_battery80) lv_obj_clear_flag(ui_battery80, LV_OBJ_FLAG_HIDDEN); break;
        case 5: /* full, không hiện icon phụ */ break;
    }

    // Tăng stage, lặp lại
    dummy_battery_stage = (dummy_battery_stage + 1) % DUMMY_STAGE_COUNT;
}

static void battery_icon_timer_cb(lv_timer_t* timer) {
    ui_update_battery_icon_dummy();
}

// Callback cập nhật đồng hồ mỗi giây, nháy nháy dấu :
static void clock3label_update_cb(lv_timer_t* timer) {
    static bool blink = false;
    struct tm t;
    time_get_local(&t);
    char buf_h[3], buf_m[3];
    snprintf(buf_h, sizeof(buf_h), "%02d", t.tm_hour);
    snprintf(buf_m, sizeof(buf_m), "%02d", t.tm_min);
    if(ui_clock)      lv_label_set_text(ui_clock, buf_h);
    if(ui_m_colon)    lv_label_set_text(ui_m_colon, buf_m);
    if(ui_h_colon)    lv_label_set_text(ui_h_colon, blink ? ":" : " ");
    blink = !blink;
}

// Motor animation: chạy 1 vòng đều quanh tâm 120,120 bán kính 105, 0s=0h, 15s=3h, 30s=6h, 45s=9h, 60s=0h
static void motor_anim_timer_cb(lv_timer_t* timer) {
    if(!ui_motor) return;

    uint32_t tick = lv_tick_get();
    float sec = (tick % 60000) / 1000.0f;

    int center_x = 120, center_y = 120;
    int radius = 105;

    // Góc 0h = -90°, 3h = 0°, 6h = 90°, 9h = 180°, 12h = 270° (quay ngược chiều kim đồng hồ)
    // 0s   = -90°
    // 15s  = 0°
    // 30s  = 90°
    // 45s  = 180°
    // 60s  = 270° (quay về -90°)
    float angle_deg = -90.0f + sec * 6.0f; // mỗi s tăng 6°
    float angle_rad = angle_deg * M_PI / 180.0f;

    int x = center_x + (int)(radius * cos(angle_rad));
    int y = center_y + (int)(radius * sin(angle_rad));
    lv_obj_set_x(ui_motor, x - center_x);
    lv_obj_set_y(ui_motor, y - center_y);
    lv_obj_set_align(ui_motor, LV_ALIGN_CENTER);

    // Đáy icon hướng ra ngoài: Xoay ảnh đúng cùng hướng bán kính
    // Nếu icon motor mặc định đáy hướng xuống, thì cộng 90°
    float motor_img_angle = angle_deg + 90.0f;
    lv_img_set_angle(ui_motor, (int16_t)(motor_img_angle * 10));
}

void ui_update_wifi_icon(void) {
    if (wifi_is_connected()) {
        if (ui_wificonnect) lv_obj_clear_flag(ui_wificonnect, LV_OBJ_FLAG_HIDDEN);
        if (ui_wifidisconnect) lv_obj_add_flag(ui_wifidisconnect, LV_OBJ_FLAG_HIDDEN);
    } else {
        if (ui_wifidisconnect) lv_obj_clear_flag(ui_wifidisconnect, LV_OBJ_FLAG_HIDDEN);
        if (ui_wificonnect) lv_obj_add_flag(ui_wificonnect, LV_OBJ_FLAG_HIDDEN);
    }
}

void ui_update_ble_icon(void) {
    if (ble_is_connected()) {
        if (ui_bleconnect) lv_obj_clear_flag(ui_bleconnect, LV_OBJ_FLAG_HIDDEN);
        if (ui_bledisconnect) lv_obj_add_flag(ui_bledisconnect, LV_OBJ_FLAG_HIDDEN);
    } else {
        if (ui_bledisconnect) lv_obj_clear_flag(ui_bledisconnect, LV_OBJ_FLAG_HIDDEN);
        if (ui_bleconnect) lv_obj_add_flag(ui_bleconnect, LV_OBJ_FLAG_HIDDEN);
    }
}

static void wifi_icon_timer_cb(lv_timer_t* timer) {
    ui_update_wifi_icon();
}

static void ble_icon_timer_cb(lv_timer_t* timer) {
    ui_update_ble_icon();
}

void ui_home_screen_init(void)
{
    ui_home = lv_obj_create(NULL);
    lv_obj_clear_flag( ui_home, LV_OBJ_FLAG_SCROLLABLE );
    lv_obj_set_style_bg_color(ui_home, lv_color_hex(0x000000), LV_PART_MAIN | LV_STATE_DEFAULT );
    lv_obj_set_style_bg_opa(ui_home, 255, LV_PART_MAIN| LV_STATE_DEFAULT);

    ui_homebutton = lv_img_create(ui_home);
    lv_img_set_src(ui_homebutton, &ui_img_bar_home_png);
    lv_obj_set_width( ui_homebutton, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_homebutton, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_homebutton, 0 );
    lv_obj_set_y( ui_homebutton, 22 );
    lv_obj_set_align( ui_homebutton, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_homebutton, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_homebutton, LV_OBJ_FLAG_SCROLLABLE );

    ui_title = lv_label_create(ui_homebutton);
    lv_obj_set_width( ui_title, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_title, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_title, 0 );
    lv_obj_set_y( ui_title, -2 );
    lv_obj_set_align( ui_title, LV_ALIGN_CENTER );
    lv_label_set_text(ui_title,"XIN CHÀO");
    lv_obj_set_style_text_color(ui_title, lv_color_hex(0xF4E7E1), LV_PART_MAIN | LV_STATE_DEFAULT );
    lv_obj_set_style_text_opa(ui_title, 255, LV_PART_MAIN| LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_title, &ui_font_SVNRounded23, LV_PART_MAIN| LV_STATE_DEFAULT);

    ui_battery = lv_img_create(ui_home);
    lv_img_set_src(ui_battery, &ui_img_battery_png);
    lv_obj_set_width( ui_battery, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_battery, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_battery, 0 );
    lv_obj_set_y( ui_battery, -55 );
    lv_obj_set_align( ui_battery, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_battery, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_battery, LV_OBJ_FLAG_SCROLLABLE );

    ui_battery80 = lv_img_create(ui_battery);
    lv_img_set_src(ui_battery80, &ui_img_battery_80_png);
    lv_obj_set_width( ui_battery80, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_battery80, LV_SIZE_CONTENT);
    lv_obj_set_align( ui_battery80, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_battery80, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_battery80, LV_OBJ_FLAG_SCROLLABLE );

    ui_battery50 = lv_img_create(ui_battery);
    lv_img_set_src(ui_battery50, &ui_img_battery_50_png);
    lv_obj_set_width( ui_battery50, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_battery50, LV_SIZE_CONTENT);
    lv_obj_set_align( ui_battery50, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_battery50, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_battery50, LV_OBJ_FLAG_SCROLLABLE );

    ui_battery30 = lv_img_create(ui_battery);
    lv_img_set_src(ui_battery30, &ui_img_battery_30_png);
    lv_obj_set_width( ui_battery30, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_battery30, LV_SIZE_CONTENT);
    lv_obj_set_align( ui_battery30, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_battery30, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_battery30, LV_OBJ_FLAG_SCROLLABLE );

    ui_battery10 = lv_img_create(ui_battery);
    lv_img_set_src(ui_battery10, &ui_img_battery_10_png);
    lv_obj_set_width( ui_battery10, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_battery10, LV_SIZE_CONTENT);
    lv_obj_set_align( ui_battery10, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_battery10, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_battery10, LV_OBJ_FLAG_SCROLLABLE );

    ui_battery5 = lv_img_create(ui_battery);
    lv_img_set_src(ui_battery5, &ui_img_battery_5_png);
    lv_obj_set_width( ui_battery5, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_battery5, LV_SIZE_CONTENT);
    lv_obj_set_align( ui_battery5, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_battery5, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_battery5, LV_OBJ_FLAG_SCROLLABLE );

    // ----- TẠO 3 LABEL ĐỒNG HỒ -----
    // HH
    ui_clock = lv_label_create(ui_home);
    lv_obj_set_width(ui_clock, LV_SIZE_CONTENT);
    lv_obj_set_height(ui_clock, LV_SIZE_CONTENT);
    lv_obj_set_x(ui_clock, -38);
    lv_obj_set_y(ui_clock, -24);
    lv_obj_set_align(ui_clock, LV_ALIGN_CENTER);
    lv_obj_set_style_text_color(ui_clock, lv_color_hex(0xF4E7E1), LV_PART_MAIN | LV_STATE_DEFAULT );
    lv_obj_set_style_text_opa(ui_clock, 255, LV_PART_MAIN| LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_clock, &ui_font_SVNRounded68, LV_PART_MAIN| LV_STATE_DEFAULT);

    // ":"
    ui_h_colon = lv_label_create(ui_home);
    lv_obj_set_width(ui_h_colon, LV_SIZE_CONTENT);
    lv_obj_set_height(ui_h_colon, LV_SIZE_CONTENT);
    lv_obj_set_x(ui_h_colon, 0);
    lv_obj_set_y(ui_h_colon, -28);
    lv_obj_set_align(ui_h_colon, LV_ALIGN_CENTER);
    lv_obj_set_style_text_color(ui_h_colon, lv_color_hex(0xF4E7E1), LV_PART_MAIN | LV_STATE_DEFAULT );
    lv_obj_set_style_text_opa(ui_h_colon, 255, LV_PART_MAIN| LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_h_colon, &ui_font_SVNRounded68, LV_PART_MAIN| LV_STATE_DEFAULT);

    // MM
    ui_m_colon = lv_label_create(ui_home);
    lv_obj_set_width(ui_m_colon, LV_SIZE_CONTENT);
    lv_obj_set_height(ui_m_colon, LV_SIZE_CONTENT);
    lv_obj_set_x(ui_m_colon, 37);
    lv_obj_set_y(ui_m_colon, -24);
    lv_obj_set_align(ui_m_colon, LV_ALIGN_CENTER);
    lv_obj_set_style_text_color(ui_m_colon, lv_color_hex(0xF4E7E1), LV_PART_MAIN | LV_STATE_DEFAULT );
    lv_obj_set_style_text_opa(ui_m_colon, 255, LV_PART_MAIN| LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_m_colon, &ui_font_SVNRounded68, LV_PART_MAIN| LV_STATE_DEFAULT);

    struct tm t;
    time_get_local(&t);
    char buf_h[3], buf_m[3];
    snprintf(buf_h, sizeof(buf_h), "%02d", t.tm_hour);
    snprintf(buf_m, sizeof(buf_m), "%02d", t.tm_min);
    lv_label_set_text(ui_clock, buf_h);
    lv_label_set_text(ui_h_colon, ":");
    lv_label_set_text(ui_m_colon, buf_m);

    if (!clock3label_timer)
        clock3label_timer = lv_timer_create(clock3label_update_cb, 1000, NULL);

    // --- ICON WIFI ---
    ui_wificonnect = lv_img_create(ui_home);
    lv_img_set_src(ui_wificonnect, &ui_img_wifi_connect_png);
    lv_obj_set_width( ui_wificonnect, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_wificonnect, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_wificonnect, 16 );
    lv_obj_set_y( ui_wificonnect, 50 );
    lv_obj_set_align( ui_wificonnect, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_wificonnect, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_wificonnect, LV_OBJ_FLAG_SCROLLABLE );

    ui_wifidisconnect = lv_img_create(ui_home);
    lv_img_set_src(ui_wifidisconnect, &ui_img_wifi_disconnect_png);
    lv_obj_set_width( ui_wifidisconnect, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_wifidisconnect, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_wifidisconnect, 16 );
    lv_obj_set_y( ui_wifidisconnect, 50 );
    lv_obj_set_align( ui_wifidisconnect, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_wifidisconnect, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_wifidisconnect, LV_OBJ_FLAG_SCROLLABLE );

    ui_update_wifi_icon();

    if (!wifi_icon_timer)
        wifi_icon_timer = lv_timer_create(wifi_icon_timer_cb, 1000, NULL);

    // --- ICON BLE ---
    ui_bleconnect = lv_img_create(ui_home);
    lv_img_set_src(ui_bleconnect, &ui_img_ble_connect_png);
    lv_obj_set_width( ui_bleconnect, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_bleconnect, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_bleconnect, -16 );
    lv_obj_set_y( ui_bleconnect, 50 );
    lv_obj_set_align( ui_bleconnect, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_bleconnect, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_bleconnect, LV_OBJ_FLAG_SCROLLABLE );

    ui_bledisconnect = lv_img_create(ui_home);
    lv_img_set_src(ui_bledisconnect, &ui_img_ble_disconnect_png);
    lv_obj_set_width( ui_bledisconnect, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_bledisconnect, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_bledisconnect, -16 );
    lv_obj_set_y( ui_bledisconnect, 50 );
    lv_obj_set_align( ui_bledisconnect, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_bledisconnect, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_bledisconnect, LV_OBJ_FLAG_SCROLLABLE );

    ui_update_ble_icon();

    if (!ble_icon_timer)
        ble_icon_timer = lv_timer_create(ble_icon_timer_cb, 1000, NULL);

    // --- PIN ANIMATION DUMMY ---
    ui_update_battery_icon_dummy();

    if (!battery_icon_timer)
        battery_icon_timer = lv_timer_create(battery_icon_timer_cb, 400, NULL);

    // --- Motor animation mượt 60fps ---
    if (!motor_anim_timer)
        motor_anim_timer = lv_timer_create(motor_anim_timer_cb, 16, NULL);

    ui_motor = lv_img_create(ui_home);
    lv_img_set_src(ui_motor, &ui_img_motor_png);
    lv_obj_set_width( ui_motor, LV_SIZE_CONTENT);
    lv_obj_set_height( ui_motor, LV_SIZE_CONTENT);
    lv_obj_set_x( ui_motor, 0 );
    lv_obj_set_y( ui_motor, 0 );
    lv_obj_set_align( ui_motor, LV_ALIGN_CENTER );
    lv_obj_add_flag( ui_motor, LV_OBJ_FLAG_ADV_HITTEST );
    lv_obj_clear_flag( ui_motor, LV_OBJ_FLAG_SCROLLABLE );
    // Set màu icon motor F4E7E1
    lv_obj_set_style_img_recolor_opa(ui_motor, LV_OPA_COVER, 0);
    lv_obj_set_style_img_recolor(ui_motor, lv_color_hex(0xF4E7E1), 0);

    uic_home = ui_home;
    uic_homebutton = ui_homebutton;
    uic_title = ui_title;
    uic_battery = ui_battery;
    uic_CLock = ui_clock;
    uic_bleconnect = ui_bleconnect;
    uic_wificonnect = ui_wificonnect;
    uic_wifidisconnect = ui_wifidisconnect;
}

void ui_home_screen_destroy(void)
{
    if (clock3label_timer) {
        lv_timer_del(clock3label_timer);
        clock3label_timer = NULL;
    }
    if (wifi_icon_timer) {
        lv_timer_del(wifi_icon_timer);
        wifi_icon_timer = NULL;
    }
    if (ble_icon_timer) {
        lv_timer_del(ble_icon_timer);
        ble_icon_timer = NULL;
    }
    if (battery_icon_timer) {
        lv_timer_del(battery_icon_timer);
        battery_icon_timer = NULL;
    }
    if (motor_anim_timer) {
        lv_timer_del(motor_anim_timer);
        motor_anim_timer = NULL;
    }
    if (ui_home) lv_obj_del(ui_home);

    uic_home= NULL;
    ui_home= NULL;
    uic_homebutton= NULL;
    ui_homebutton= NULL;
    uic_title= NULL;
    ui_title= NULL;
    uic_battery= NULL;
    ui_battery= NULL;
    ui_battery80= NULL;
    ui_battery50= NULL;
    ui_battery30= NULL;
    ui_battery10= NULL;
    ui_battery5= NULL;
    uic_CLock= NULL;
    ui_clock= NULL;
    ui_h_colon = NULL;
    ui_m_colon = NULL;
    uic_bleconnect= NULL;
    ui_bleconnect= NULL;
    ui_bledisconnect= NULL;
    uic_wificonnect= NULL;
    ui_wificonnect= NULL;
    uic_wifidisconnect= NULL;
    ui_wifidisconnect= NULL;
    ui_motor= NULL;
}

void ui_home_screen_relocalize(void)
{
    // label widgets on screen
}